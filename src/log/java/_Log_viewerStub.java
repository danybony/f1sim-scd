
/**
* _Log_viewerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from log_viewer.idl
* luned√¨ 11 maggio 2009 18.13.35 CEST
*/

public class _Log_viewerStub extends org.omg.CORBA.portable.ObjectImpl implements Log_viewer
{

  public void setEnvironment (String[] Teams, String[] Drivers, short SegmentNumber, short T1, short T2, short RaceLaps)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setEnvironment", false);
                StringsHelper.write ($out, Teams);
                StringsHelper.write ($out, Drivers);
                $out.write_short (SegmentNumber);
                $out.write_short (T1);
                $out.write_short (T2);
                $out.write_short (RaceLaps);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setEnvironment (Teams, Drivers, SegmentNumber, T1, T2, RaceLaps        );
            } finally {
                _releaseReply ($in);
            }
  } // setEnvironment

  public void updateLog (short Driver_ID, short Segment, short Speed)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateLog", false);
                $out.write_short (Driver_ID);
                $out.write_short (Segment);
                $out.write_short (Speed);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updateLog (Driver_ID, Segment, Speed        );
            } finally {
                _releaseReply ($in);
            }
  } // updateLog

  public void endRace ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("endRace", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                endRace (        );
            } finally {
                _releaseReply ($in);
            }
  } // endRace

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Log_viewer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _Log_viewerStub
