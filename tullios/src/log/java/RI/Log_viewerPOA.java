package RI;


/**
* RI/Log_viewerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/log/java/log_viewer.idl
* Wednesday, October 14, 2009 1:10:41 PM CEST
*/

public abstract class Log_viewerPOA extends org.omg.PortableServer.Servant
 implements RI.Log_viewerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("setEnvironment", new java.lang.Integer (0));
    _methods.put ("updateLog", new java.lang.Integer (1));
    _methods.put ("endRace", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // RI/Log_viewer/setEnvironment
       {
         String Drivers[] = RI.StringSequenceHelper.read (in);
         int segmentsNumber = in.read_long ();
         short RaceLaps = in.read_short ();
         this.setEnvironment (Drivers, segmentsNumber, RaceLaps);
         out = $rh.createReply();
         break;
       }

       case 1:  // RI/Log_viewer/updateLog
       {
         short Driver_ID = in.read_short ();
         int Segment = in.read_long ();
         float Speed = in.read_float ();
         boolean box = in.read_boolean ();
         this.updateLog (Driver_ID, Segment, Speed, box);
         out = $rh.createReply();
         break;
       }

       case 2:  // RI/Log_viewer/endRace
       {
         short Driver_ID = in.read_short ();
         short reason = in.read_short ();
         this.endRace (Driver_ID, reason);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RI/Log_viewer:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Log_viewer _this() 
  {
    return Log_viewerHelper.narrow(
    super._this_object());
  }

  public Log_viewer _this(org.omg.CORBA.ORB orb) 
  {
    return Log_viewerHelper.narrow(
    super._this_object(orb));
  }


} // class Log_viewerPOA
